name: CI

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - '*'

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@master
      - name: Setup Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 14.x
      - name: Install dependencies
        run: yarn install --frozen-lockfile
      - name: Test
        run: yarn test

  release:
    name: Release
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/master'
    environment: Release
    steps:
      - name: Checkout repository
        uses: actions/checkout@master
        with:
          # Fetch Git history so that Changesets can generate changelogs with correct commits
          fetch-depth: 0
      - name: Setup Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 14.x
      - name: Install dependencies
        run: yarn install --frozen-lockfile
      - name: Bump versions according to changeset
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          yarn changeset version
          git push
      - name: Publish to npm
        run: |
          echo '//registry.npmjs.org/:_authToken=${NODE_AUTH_TOKEN}' > .npmrc
          yarn release
          echo "version_tag=$(git describe --tags --abbrev=0)" >> $GITHUB_ENV
          echo "release_changelog<<EOF$(
            node -e '
              const changelog = require("fs").readFileSync("CHANGELOG.md", "utf8");
              const version = require("./package.json").version;
              console.log(require("@changesets/release-utils").getChangelogEntry(changelog, version).content);
            '
          )EOF" >> $GITHUB_ENV
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.version_tag }}
          release_name: ${{ env.version_tag }}
          body: ${{ env.release_changelog }}
